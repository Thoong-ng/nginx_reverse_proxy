name: Deploy CI/CD Nginx Reverse Proxy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  EC2_HOST: ${{ secrets.EC2_HOST }}
  EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
  EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
  API_SERVERS: ${{ secrets.API_SERVERS}}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKERHUB_USERNAME }}
        password: ${{ env.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        tags: ${{ env.DOCKERHUB_USERNAME }}/nginx-reverse-proxy:${{ github.sha }}
        
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ env.EC2_SSH_KEY }}
        API_SERVERS: ${{ env.API_SERVERS}}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${EC2_USERNAME}@${EC2_HOST} '
          docker pull ${{ env.DOCKERHUB_USERNAME }}/nginx-reverse-proxy:${{ github.sha }} &&
          docker stop nginx-reverse-proxy || true &&
          docker rm nginx-reverse-proxy || true &&
          docker run -d --name nginx-reverse-proxy  \
             -p 80:80 \
             -E API_SERVERS="${{ env.API_SERVERS }}" \
             ${{ env.DOCKERHUB_USERNAME }}/nginx-reverse-proxy:${{ github.sha }} ||
          (docker start nginx-reverse-proxy && exit 1)
        '
        
    - name: Rollback on failure
      if: failure()
      env:
        PRIVATE_KEY: ${{ env.EC2_SSH_KEY }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${EC2_USERNAME}@${EC2_HOST} '
          docker start nginx-reverse-proxy || true
        '